{
  "hints": {
    "updateAssetMBR(asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setSigVerificationAddress(address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setSignature(byte[64],address,account,txn)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setVerificationMethods((application,string)[])void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "deleteVerificationMethods()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "verify(pay,axfer,uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "CREATE"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "sigVerificationAddress": {
          "type": "bytes",
          "key": "sigVerificationAddress"
        },
        "assetMBR": {
          "type": "uint64",
          "key": "assetMBR"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 1,
      "num_uints": 1
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50IDEKcmV0dXJu"
  },
  "contract": {
    "name": "Master",
    "desc": "",
    "methods": [
      {
        "name": "updateAssetMBR",
        "args": [
          {
            "name": "asset",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "setSigVerificationAddress",
        "args": [
          {
            "name": "lsig",
            "type": "address",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "setSignature",
        "args": [
          {
            "name": "sig",
            "type": "byte[64]",
            "desc": ""
          },
          {
            "name": "authAddr",
            "type": "address",
            "desc": ""
          },
          {
            "name": "acct",
            "type": "account",
            "desc": ""
          },
          {
            "name": "verifier",
            "type": "txn",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "setVerificationMethods",
        "args": [
          {
            "name": "methods",
            "type": "(application,string)[]",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "deleteVerificationMethods",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "verify",
        "args": [
          {
            "name": "mbrPayment",
            "type": "pay",
            "desc": ""
          },
          {
            "name": "optIn",
            "type": "axfer",
            "desc": ""
          },
          {
            "name": "verificationTxnIndex",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "verifcationMethodIndex",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      }
    ]
  }
}