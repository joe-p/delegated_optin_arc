{
  "hints": {
    "addToAllowlist(uint16,address,pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setAllowlist(uint16,address[])void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "deleteAllowlist(uint16)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "deleteFromAllowlist(uint16,address,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "verifySender(uint16,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setAllowlistStatus(uint8)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "CREATE"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {},
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 0
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKCWIgbWFpbgoKcHJvY2Vzc19zdGF0aWNfdHVwbGVfZWxlbWVudDoKCXByb3RvIDQgMwoJZnJhbWVfZGlnIC00IC8vIHR1cGxlIGhlYWQKCWZyYW1lX2RpZyAtMSAvLyBlbGVtZW50Cgljb25jYXQKCWZyYW1lX2RpZyAtMyAvLyB0dXBsZSB0YWlsCglmcmFtZV9kaWcgLTIgLy8gaGVhZCBvZmZzZXQKCXJldHN1YgoKdmVyaWZ5TUJSUGF5bWVudDoKCXByb3RvIDIgMAoKCS8vIC4vY29udHJhY3RzL2FsbG93bGlzdC5hbGdvLnRzOjE1CgkvLyBhc3NlcnQocGF5bWVudC5hbW91bnQgPT09IHRoaXMuYXBwLmFkZHJlc3MubWluQmFsYW5jZSAtIHByZU1CUikKCWZyYW1lX2RpZyAtMSAvLyBwYXltZW50OiBwYXkKCWd0eG5zIEFtb3VudAoJdHhuYSBBcHBsaWNhdGlvbnMgMAoJYXBwX3BhcmFtc19nZXQgQXBwQWRkcmVzcwoJYXNzZXJ0CglhY2N0X3BhcmFtc19nZXQgQWNjdE1pbkJhbGFuY2UKCWFzc2VydAoJZnJhbWVfZGlnIC0yIC8vIHByZU1CUjogdWludDY0CgktCgk9PQoJYXNzZXJ0CgoJLy8gLi9jb250cmFjdHMvYWxsb3dsaXN0LmFsZ28udHM6MTYKCS8vIGFzc2VydChwYXltZW50LnJlY2VpdmVyID09PSB0aGlzLmFwcC5hZGRyZXNzKQoJZnJhbWVfZGlnIC0xIC8vIHBheW1lbnQ6IHBheQoJZ3R4bnMgUmVjZWl2ZXIKCXR4bmEgQXBwbGljYXRpb25zIDAKCWFwcF9wYXJhbXNfZ2V0IEFwcEFkZHJlc3MKCWFzc2VydAoJPT0KCWFzc2VydAoJcmV0c3ViCgpzZW5kTUJSUGF5bWVudDoKCXByb3RvIDEgMAoKCS8vIC4vY29udHJhY3RzL2FsbG93bGlzdC5hbGdvLnRzOjIwCgkvLyBzZW5kUGF5bWVudCh7CglpdHhuX2JlZ2luCglpbnQgcGF5CglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gLi9jb250cmFjdHMvYWxsb3dsaXN0LmFsZ28udHM6MjEKCS8vIHNlbmRlcjogdGhpcy5hcHAuYWRkcmVzcwoJdHhuYSBBcHBsaWNhdGlvbnMgMAoJYXBwX3BhcmFtc19nZXQgQXBwQWRkcmVzcwoJYXNzZXJ0CglpdHhuX2ZpZWxkIFNlbmRlcgoKCS8vIC4vY29udHJhY3RzL2FsbG93bGlzdC5hbGdvLnRzOjIyCgkvLyByZWNlaXZlcjogdGhpcy50eG4uc2VuZGVyCgl0eG4gU2VuZGVyCglpdHhuX2ZpZWxkIFJlY2VpdmVyCgoJLy8gLi9jb250cmFjdHMvYWxsb3dsaXN0LmFsZ28udHM6MjMKCS8vIGFtb3VudDogcHJlTUJSIC0gdGhpcy5hcHAuYWRkcmVzcy5taW5CYWxhbmNlCglmcmFtZV9kaWcgLTEgLy8gcHJlTUJSOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25zIDAKCWFwcF9wYXJhbXNfZ2V0IEFwcEFkZHJlc3MKCWFzc2VydAoJYWNjdF9wYXJhbXNfZ2V0IEFjY3RNaW5CYWxhbmNlCglhc3NlcnQKCS0KCWl0eG5fZmllbGQgQW1vdW50CgoJLy8gLi9jb250cmFjdHMvYWxsb3dsaXN0LmFsZ28udHM6MjQKCS8vIGZlZTogMAoJaW50IDAKCWl0eG5fZmllbGQgRmVlCglpdHhuX3N1Ym1pdAoJcmV0c3ViCgphYmlfcm91dGVfYWRkVG9BbGxvd2xpc3Q6Cgl0eG4gT25Db21wbGV0aW9uCglpbnQgTm9PcAoJPT0KCXR4biBBcHBsaWNhdGlvbklECglpbnQgMAoJIT0KCSYmCglhc3NlcnQKCWJ5dGUgMHgKCWR1cG4gMgoJdHhuIEdyb3VwSW5kZXgKCWludCAxCgktCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCgljYWxsc3ViIGFkZFRvQWxsb3dsaXN0CglpbnQgMQoJcmV0dXJuCgphZGRUb0FsbG93bGlzdDoKCXByb3RvIDYgMAoKCS8vIC4vY29udHJhY3RzL2FsbG93bGlzdC5hbGdvLnRzOjM3CgkvLyBwcmVNQlIgPSB0aGlzLmFwcC5hZGRyZXNzLm1pbkJhbGFuY2UKCXR4bmEgQXBwbGljYXRpb25zIDAKCWFwcF9wYXJhbXNfZ2V0IEFwcEFkZHJlc3MKCWFzc2VydAoJYWNjdF9wYXJhbXNfZ2V0IEFjY3RNaW5CYWxhbmNlCglhc3NlcnQKCWZyYW1lX2J1cnkgLTQgLy8gcHJlTUJSOiB1aW50NjQKCgkvLyAuL2NvbnRyYWN0cy9hbGxvd2xpc3QuYWxnby50czozOAoJLy8gYWxsb3dsaXN0OiBBbGxvd2xpc3QgPSB7IGFjY291bnQ6IHRoaXMudHhuLnNlbmRlciwgYm94SUQ6IGJveElEIH0KCWJ5dGUgMHggLy8gaW5pdGlhbCBoZWFkCglieXRlIDB4IC8vIGluaXRpYWwgdGFpbAoJYnl0ZSAweDAwMjIgLy8gaW5pdGlhbCBoZWFkIG9mZnNldAoJdHhuIFNlbmRlcgoJY2FsbHN1YiBwcm9jZXNzX3N0YXRpY190dXBsZV9lbGVtZW50CglmcmFtZV9kaWcgLTEgLy8gYm94SUQ6IHVpbnQxNgoJY2FsbHN1YiBwcm9jZXNzX3N0YXRpY190dXBsZV9lbGVtZW50Cglwb3AgLy8gcG9wIGhlYWQgb2Zmc2V0Cgljb25jYXQgLy8gY29uY2F0IGhlYWQgYW5kIHRhaWwKCWZyYW1lX2J1cnkgLTUgLy8gYWxsb3dsaXN0OiBBbGxvd2xpc3QKCgkvLyBpZjBfY29uZGl0aW9uCgkvLyAuL2NvbnRyYWN0cy9hbGxvd2xpc3QuYWxnby50czo0MAoJLy8gdGhpcy5hbGxvd2xpc3QuZXhpc3RzKGFsbG93bGlzdCkKCWZyYW1lX2RpZyAtNSAvLyBhbGxvd2xpc3Q6IEFsbG93bGlzdAoJYm94X2dldAoJc3dhcAoJcG9wCglieiBpZjBfZWxzZQoKCS8vIGlmMF9jb25zZXF1ZW50CgkvLyAuL2NvbnRyYWN0cy9hbGxvd2xpc3QuYWxnby50czo0MQoJLy8gdGhpcy5hbGxvd2xpc3QuZ2V0KGFsbG93bGlzdCkucHVzaChhZGRyKQoJZnJhbWVfZGlnIC01IC8vIGFsbG93bGlzdDogQWxsb3dsaXN0Cglib3hfZ2V0Cglhc3NlcnQKCWR1cAoJaW50IDAKCWV4dHJhY3RfdWludDE2CglpbnQgMQoJKwoJaXRvYgoJZXh0cmFjdCA2IDIKCXN3YXAKCWV4dHJhY3QgMiAwCgljb25jYXQKCWZyYW1lX2RpZyAtMiAvLyBhZGRyOiBhZGRyZXNzCgljb25jYXQKCWZyYW1lX2RpZyAtNSAvLyBhbGxvd2xpc3Q6IEFsbG93bGlzdAoJZHVwCglib3hfZGVsCglwb3AKCXN3YXAKCWJveF9wdXQKCWIgaWYwX2VuZAoKaWYwX2Vsc2U6CgkvLyAuL2NvbnRyYWN0cy9hbGxvd2xpc3QuYWxnby50czo0MwoJLy8gbmV3QWxsb3dsaXN0OiBBZGRyZXNzW10gPSBbYWRkcl0KCWZyYW1lX2RpZyAtMiAvLyBhZGRyOiBhZGRyZXNzCglieXRlIDB4MDAwMQoJc3dhcAoJY29uY2F0CglmcmFtZV9idXJ5IC02IC8vIG5ld0FsbG93bGlzdDogYWRkcmVzc1tdCgoJLy8gLi9jb250cmFjdHMvYWxsb3dsaXN0LmFsZ28udHM6NDQKCS8vIHRoaXMuYWxsb3dsaXN0LnB1dChhbGxvd2xpc3QsIG5ld0FsbG93bGlzdCkKCWZyYW1lX2RpZyAtNSAvLyBhbGxvd2xpc3Q6IEFsbG93bGlzdAoJZHVwCglib3hfZGVsCglwb3AKCWZyYW1lX2RpZyAtNiAvLyBuZXdBbGxvd2xpc3Q6IGFkZHJlc3NbXQoJYm94X3B1dAoKaWYwX2VuZDoKCS8vIC4vY29udHJhY3RzL2FsbG93bGlzdC5hbGdvLnRzOjQ3CgkvLyB0aGlzLnZlcmlmeU1CUlBheW1lbnQocGF5bWVudCwgcHJlTUJSKQoJZnJhbWVfZGlnIC00IC8vIHByZU1CUjogdWludDY0CglmcmFtZV9kaWcgLTMgLy8gcGF5bWVudDogcGF5CgljYWxsc3ViIHZlcmlmeU1CUlBheW1lbnQKCXJldHN1YgoKYWJpX3JvdXRlX3NldEFsbG93bGlzdDoKCXR4biBPbkNvbXBsZXRpb24KCWludCBOb09wCgk9PQoJdHhuIEFwcGxpY2F0aW9uSUQKCWludCAwCgkhPQoJJiYKCWFzc2VydAoJYnl0ZSAweAoJZHVwCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCgljYWxsc3ViIHNldEFsbG93bGlzdAoJaW50IDEKCXJldHVybgoKc2V0QWxsb3dsaXN0OgoJcHJvdG8gNCAwCgoJLy8gLi9jb250cmFjdHMvYWxsb3dsaXN0LmFsZ28udHM6NTkKCS8vIHByZU1CUiA9IHRoaXMuYXBwLmFkZHJlc3MubWluQmFsYW5jZQoJdHhuYSBBcHBsaWNhdGlvbnMgMAoJYXBwX3BhcmFtc19nZXQgQXBwQWRkcmVzcwoJYXNzZXJ0CglhY2N0X3BhcmFtc19nZXQgQWNjdE1pbkJhbGFuY2UKCWFzc2VydAoJZnJhbWVfYnVyeSAtMyAvLyBwcmVNQlI6IHVpbnQ2NAoKCS8vIC4vY29udHJhY3RzL2FsbG93bGlzdC5hbGdvLnRzOjYwCgkvLyBhbGxvd2xpc3Q6IEFsbG93bGlzdCA9IHsgYWNjb3VudDogdGhpcy50eG4uc2VuZGVyLCBib3hJRDogYm94SUQgfQoJYnl0ZSAweCAvLyBpbml0aWFsIGhlYWQKCWJ5dGUgMHggLy8gaW5pdGlhbCB0YWlsCglieXRlIDB4MDAyMiAvLyBpbml0aWFsIGhlYWQgb2Zmc2V0Cgl0eG4gU2VuZGVyCgljYWxsc3ViIHByb2Nlc3Nfc3RhdGljX3R1cGxlX2VsZW1lbnQKCWZyYW1lX2RpZyAtMSAvLyBib3hJRDogdWludDE2CgljYWxsc3ViIHByb2Nlc3Nfc3RhdGljX3R1cGxlX2VsZW1lbnQKCXBvcCAvLyBwb3AgaGVhZCBvZmZzZXQKCWNvbmNhdCAvLyBjb25jYXQgaGVhZCBhbmQgdGFpbAoJZnJhbWVfYnVyeSAtNCAvLyBhbGxvd2xpc3Q6IEFsbG93bGlzdAoKCS8vIC4vY29udHJhY3RzL2FsbG93bGlzdC5hbGdvLnRzOjYyCgkvLyB0aGlzLmFsbG93bGlzdC5kZWxldGUoYWxsb3dsaXN0KQoJZnJhbWVfZGlnIC00IC8vIGFsbG93bGlzdDogQWxsb3dsaXN0Cglib3hfZGVsCgoJLy8gLi9jb250cmFjdHMvYWxsb3dsaXN0LmFsZ28udHM6NjQKCS8vIHRoaXMuYWxsb3dsaXN0LnB1dChhbGxvd2xpc3QsIGFkZHJzKQoJZnJhbWVfZGlnIC00IC8vIGFsbG93bGlzdDogQWxsb3dsaXN0CglkdXAKCWJveF9kZWwKCXBvcAoJZnJhbWVfZGlnIC0yIC8vIGFkZHJzOiBhZGRyZXNzW10KCWJveF9wdXQKCgkvLyBpZjFfY29uZGl0aW9uCgkvLyAuL2NvbnRyYWN0cy9hbGxvd2xpc3QuYWxnby50czo2NgoJLy8gcHJlTUJSID4gdGhpcy5hcHAuYWRkcmVzcy5taW5CYWxhbmNlCglmcmFtZV9kaWcgLTMgLy8gcHJlTUJSOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25zIDAKCWFwcF9wYXJhbXNfZ2V0IEFwcEFkZHJlc3MKCWFzc2VydAoJYWNjdF9wYXJhbXNfZ2V0IEFjY3RNaW5CYWxhbmNlCglhc3NlcnQKCT4KCWJ6IGlmMV9lbHNlCgoJLy8gaWYxX2NvbnNlcXVlbnQKCS8vIC4vY29udHJhY3RzL2FsbG93bGlzdC5hbGdvLnRzOjY3CgkvLyB0aGlzLnNlbmRNQlJQYXltZW50KHByZU1CUikKCWZyYW1lX2RpZyAtMyAvLyBwcmVNQlI6IHVpbnQ2NAoJY2FsbHN1YiBzZW5kTUJSUGF5bWVudAoJYiBpZjFfZW5kCgppZjFfZWxzZToKCS8vIC4vY29udHJhY3RzL2FsbG93bGlzdC5hbGdvLnRzOjY5CgkvLyB0aGlzLnZlcmlmeU1CUlBheW1lbnQodGhpcy50eG5Hcm91cFt0aGlzLnR4bi5ncm91cEluZGV4IC0gMV0sIHByZU1CUikKCWZyYW1lX2RpZyAtMyAvLyBwcmVNQlI6IHVpbnQ2NAoJdHhuIEdyb3VwSW5kZXgKCWludCAxCgktCgljYWxsc3ViIHZlcmlmeU1CUlBheW1lbnQKCmlmMV9lbmQ6CglyZXRzdWIKCmFiaV9yb3V0ZV9kZWxldGVBbGxvd2xpc3Q6Cgl0eG4gT25Db21wbGV0aW9uCglpbnQgTm9PcAoJPT0KCXR4biBBcHBsaWNhdGlvbklECglpbnQgMAoJIT0KCSYmCglhc3NlcnQKCWJ5dGUgMHgKCWR1cAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJY2FsbHN1YiBkZWxldGVBbGxvd2xpc3QKCWludCAxCglyZXR1cm4KCmRlbGV0ZUFsbG93bGlzdDoKCXByb3RvIDMgMAoKCS8vIC4vY29udHJhY3RzL2FsbG93bGlzdC5hbGdvLnRzOjgwCgkvLyBwcmVNQlIgPSB0aGlzLmFwcC5hZGRyZXNzLm1pbkJhbGFuY2UKCXR4bmEgQXBwbGljYXRpb25zIDAKCWFwcF9wYXJhbXNfZ2V0IEFwcEFkZHJlc3MKCWFzc2VydAoJYWNjdF9wYXJhbXNfZ2V0IEFjY3RNaW5CYWxhbmNlCglhc3NlcnQKCWZyYW1lX2J1cnkgLTIgLy8gcHJlTUJSOiB1aW50NjQKCgkvLyAuL2NvbnRyYWN0cy9hbGxvd2xpc3QuYWxnby50czo4MQoJLy8gYWxsb3dsaXN0OiBBbGxvd2xpc3QgPSB7IGFjY291bnQ6IHRoaXMudHhuLnNlbmRlciwgYm94SUQ6IGJveElEIH0KCWJ5dGUgMHggLy8gaW5pdGlhbCBoZWFkCglieXRlIDB4IC8vIGluaXRpYWwgdGFpbAoJYnl0ZSAweDAwMjIgLy8gaW5pdGlhbCBoZWFkIG9mZnNldAoJdHhuIFNlbmRlcgoJY2FsbHN1YiBwcm9jZXNzX3N0YXRpY190dXBsZV9lbGVtZW50CglmcmFtZV9kaWcgLTEgLy8gYm94SUQ6IHVpbnQxNgoJY2FsbHN1YiBwcm9jZXNzX3N0YXRpY190dXBsZV9lbGVtZW50Cglwb3AgLy8gcG9wIGhlYWQgb2Zmc2V0Cgljb25jYXQgLy8gY29uY2F0IGhlYWQgYW5kIHRhaWwKCWZyYW1lX2J1cnkgLTMgLy8gYWxsb3dsaXN0OiBBbGxvd2xpc3QKCgkvLyAuL2NvbnRyYWN0cy9hbGxvd2xpc3QuYWxnby50czo4MwoJLy8gdGhpcy5hbGxvd2xpc3QuZGVsZXRlKGFsbG93bGlzdCkKCWZyYW1lX2RpZyAtMyAvLyBhbGxvd2xpc3Q6IEFsbG93bGlzdAoJYm94X2RlbAoKCS8vIC4vY29udHJhY3RzL2FsbG93bGlzdC5hbGdvLnRzOjg1CgkvLyB0aGlzLnNlbmRNQlJQYXltZW50KHByZU1CUikKCWZyYW1lX2RpZyAtMiAvLyBwcmVNQlI6IHVpbnQ2NAoJY2FsbHN1YiBzZW5kTUJSUGF5bWVudAoJcmV0c3ViCgphYmlfcm91dGVfZGVsZXRlRnJvbUFsbG93bGlzdDoKCXR4biBPbkNvbXBsZXRpb24KCWludCBOb09wCgk9PQoJdHhuIEFwcGxpY2F0aW9uSUQKCWludCAwCgkhPQoJJiYKCWFzc2VydAoJYnl0ZSAweAoJZHVwbiAyCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAzCglidG9pCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCgljYWxsc3ViIGRlbGV0ZUZyb21BbGxvd2xpc3QKCWludCAxCglyZXR1cm4KCmRlbGV0ZUZyb21BbGxvd2xpc3Q6Cglwcm90byA2IDAKCgkvLyAuL2NvbnRyYWN0cy9hbGxvd2xpc3QuYWxnby50czo5NwoJLy8gcHJlTUJSID0gdGhpcy5hcHAuYWRkcmVzcy5taW5CYWxhbmNlCgl0eG5hIEFwcGxpY2F0aW9ucyAwCglhcHBfcGFyYW1zX2dldCBBcHBBZGRyZXNzCglhc3NlcnQKCWFjY3RfcGFyYW1zX2dldCBBY2N0TWluQmFsYW5jZQoJYXNzZXJ0CglmcmFtZV9idXJ5IC00IC8vIHByZU1CUjogdWludDY0CgoJLy8gLi9jb250cmFjdHMvYWxsb3dsaXN0LmFsZ28udHM6OTgKCS8vIGFsbG93bGlzdDogQWxsb3dsaXN0ID0geyBhY2NvdW50OiB0aGlzLnR4bi5zZW5kZXIsIGJveElEOiBib3hJRCB9CglieXRlIDB4IC8vIGluaXRpYWwgaGVhZAoJYnl0ZSAweCAvLyBpbml0aWFsIHRhaWwKCWJ5dGUgMHgwMDIyIC8vIGluaXRpYWwgaGVhZCBvZmZzZXQKCXR4biBTZW5kZXIKCWNhbGxzdWIgcHJvY2Vzc19zdGF0aWNfdHVwbGVfZWxlbWVudAoJZnJhbWVfZGlnIC0xIC8vIGJveElEOiB1aW50MTYKCWNhbGxzdWIgcHJvY2Vzc19zdGF0aWNfdHVwbGVfZWxlbWVudAoJcG9wIC8vIHBvcCBoZWFkIG9mZnNldAoJY29uY2F0IC8vIGNvbmNhdCBoZWFkIGFuZCB0YWlsCglmcmFtZV9idXJ5IC01IC8vIGFsbG93bGlzdDogQWxsb3dsaXN0CgoJLy8gLi9jb250cmFjdHMvYWxsb3dsaXN0LmFsZ28udHM6MTAwCgkvLyBzcGxpY2VkID0gdGhpcy5hbGxvd2xpc3QuZ2V0KGFsbG93bGlzdCkuc3BsaWNlKGluZGV4LCAxKQoJZnJhbWVfZGlnIC01IC8vIGFsbG93bGlzdDogQWxsb3dsaXN0Cglib3hfZ2V0Cglhc3NlcnQKCWludCAwCglleHRyYWN0X3VpbnQxNgoJaW50IDEKCS0KCWl0b2IKCWV4dHJhY3QgNiAyCglmcmFtZV9kaWcgLTMgLy8gaW5kZXg6IHVpbnQ2NAoJaW50IDMyCgkqCglpbnQgMgoJKwoJc3RvcmUgMTIgLy8gc3BsaWNlIHN0YXJ0CglpbnQgMQoJaW50IDMyCgkqCglpbnQgMzIKCSsKCXN0b3JlIDEzIC8vIHNwbGljZSBieXRlIGxlbmd0aAoJZnJhbWVfZGlnIC01IC8vIGFsbG93bGlzdDogQWxsb3dsaXN0Cglib3hfZ2V0Cglhc3NlcnQKCWludCAyCglsb2FkIDEyIC8vIHNwbGljZSBzdGFydAoJc3Vic3RyaW5nMwoJZnJhbWVfZGlnIC01IC8vIGFsbG93bGlzdDogQWxsb3dsaXN0Cglib3hfZ2V0Cglhc3NlcnQKCWR1cAoJbGVuCglsb2FkIDEyIC8vIHNwbGljZSBzdGFydAoJbG9hZCAxMyAvLyBzcGxpY2UgYnl0ZSBsZW5ndGgKCSsKCWludCAzMgoJLQoJc3dhcAoJc3Vic3RyaW5nMwoJY29uY2F0Cgljb25jYXQKCWludCAxCglpdG9iCglleHRyYWN0IDYgMgoJZnJhbWVfZGlnIC01IC8vIGFsbG93bGlzdDogQWxsb3dsaXN0Cglib3hfZ2V0Cglhc3NlcnQKCWxvYWQgMTIgLy8gc3BsaWNlIHN0YXJ0Cglsb2FkIDEzIC8vIHNwbGljZSBieXRlIGxlbmd0aAoJaW50IDMyCgktCglleHRyYWN0MwoJY29uY2F0Cglzd2FwCglmcmFtZV9kaWcgLTUgLy8gYWxsb3dsaXN0OiBBbGxvd2xpc3QKCWR1cAoJYm94X2RlbAoJcG9wCglzd2FwCglib3hfcHV0CglmcmFtZV9idXJ5IC02IC8vIHNwbGljZWQ6IGFkZHJlc3NbXQoKCS8vIC4vY29udHJhY3RzL2FsbG93bGlzdC5hbGdvLnRzOjEwMgoJLy8gYXNzZXJ0KHNwbGljZWRbMF0gPT09IGFkZHIpCglmcmFtZV9kaWcgLTYgLy8gc3BsaWNlZDogYWRkcmVzc1tdCglpbnQgMAoJaW50IDMyIC8vIGVsZW1lbnQgbGVuZ3RoCgkqIC8vIGVsZW1lbnQgb2Zmc2V0CglpbnQgMgoJKyAvLyBhZGQgdHdvIGZvciBsZW5ndGgKCWludCAzMgoJZXh0cmFjdDMKCWZyYW1lX2RpZyAtMiAvLyBhZGRyOiBhZGRyZXNzCgk9PQoJYXNzZXJ0CgoJLy8gLi9jb250cmFjdHMvYWxsb3dsaXN0LmFsZ28udHM6MTA0CgkvLyB0aGlzLnNlbmRNQlJQYXltZW50KHByZU1CUikKCWZyYW1lX2RpZyAtNCAvLyBwcmVNQlI6IHVpbnQ2NAoJY2FsbHN1YiBzZW5kTUJSUGF5bWVudAoJcmV0c3ViCgphYmlfcm91dGVfdmVyaWZ5U2VuZGVyOgoJdHhuIE9uQ29tcGxldGlvbgoJaW50IE5vT3AKCT09Cgl0eG4gQXBwbGljYXRpb25JRAoJaW50IDAKCSE9CgkmJgoJYXNzZXJ0CglieXRlIDB4CglkdXBuIDMKCXR4bmEgQXBwbGljYXRpb25BcmdzIDIKCWJ0b2kKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWNhbGxzdWIgdmVyaWZ5U2VuZGVyCglpbnQgMQoJcmV0dXJuCgp2ZXJpZnlTZW5kZXI6Cglwcm90byA2IDAKCgkvLyAuL2NvbnRyYWN0cy9hbGxvd2xpc3QuYWxnby50czoxMTgKCS8vIG9wdEluID0gdGhpcy50eG5Hcm91cFt0aGlzLnR4bi5ncm91cEluZGV4IC0gMV0KCXR4biBHcm91cEluZGV4CglpbnQgMQoJLQoJZnJhbWVfYnVyeSAtMyAvLyBvcHRJbjogdHhuCgoJLy8gaWYyX2NvbmRpdGlvbgoJLy8gLi9jb250cmFjdHMvYWxsb3dsaXN0LmFsZ28udHM6MTE5CgkvLyAhdGhpcy5zdGF0dXMuZXhpc3RzKG9wdEluLmFzc2V0UmVjZWl2ZXIpCglieXRlICJzdGF0dXMiCglmcmFtZV9kaWcgLTMgLy8gb3B0SW46IHR4bgoJZ3R4bnMgQXNzZXRSZWNlaXZlcgoJY29uY2F0Cglib3hfZ2V0Cglzd2FwCglwb3AKCSEKCWJ6IGlmMl9lbmQKCgkvLyBpZjJfY29uc2VxdWVudAoJLy8gLi9jb250cmFjdHMvYWxsb3dsaXN0LmFsZ28udHM6MTE5CgkvLyByZXR1cm47CglyZXRzdWIKCmlmMl9lbmQ6CgkvLyAuL2NvbnRyYWN0cy9hbGxvd2xpc3QuYWxnby50czoxMjEKCS8vIHN0YXR1cyA9IHRoaXMuc3RhdHVzLmdldChvcHRJbi5hc3NldFJlY2VpdmVyKQoJYnl0ZSAic3RhdHVzIgoJZnJhbWVfZGlnIC0zIC8vIG9wdEluOiB0eG4KCWd0eG5zIEFzc2V0UmVjZWl2ZXIKCWNvbmNhdAoJYm94X2dldAoJYXNzZXJ0CglmcmFtZV9idXJ5IC00IC8vIHN0YXR1czogdWludDgKCgkvLyAuL2NvbnRyYWN0cy9hbGxvd2xpc3QuYWxnby50czoxMjIKCS8vIGFzc2VydChzdGF0dXMgIT09IEFMTE9XX05PTkUpCglmcmFtZV9kaWcgLTQgLy8gc3RhdHVzOiB1aW50OAoJaW50IDIKCWl0b2IKCWV4dHJhY3QgNyAwCgliIT0KCWFzc2VydAoKCS8vIGlmM19jb25kaXRpb24KCS8vIC4vY29udHJhY3RzL2FsbG93bGlzdC5hbGdvLnRzOjEyMwoJLy8gc3RhdHVzID09PSBBTExPV19BTEwKCWZyYW1lX2RpZyAtNCAvLyBzdGF0dXM6IHVpbnQ4CglpbnQgMAoJaXRvYgoJZXh0cmFjdCA3IDAKCWI9PQoJYnogaWYzX2VuZAoKCS8vIGlmM19jb25zZXF1ZW50CgkvLyAuL2NvbnRyYWN0cy9hbGxvd2xpc3QuYWxnby50czoxMjMKCS8vIHJldHVybjsKCXJldHN1YgoKaWYzX2VuZDoKCS8vIC4vY29udHJhY3RzL2FsbG93bGlzdC5hbGdvLnRzOjEyNQoJLy8gYWxsb3dsaXN0OiBBbGxvd2xpc3QgPSB7IGFjY291bnQ6IG9wdEluLmFzc2V0UmVjZWl2ZXIsIGJveElEOiBib3hJRCB9CglieXRlIDB4IC8vIGluaXRpYWwgaGVhZAoJYnl0ZSAweCAvLyBpbml0aWFsIHRhaWwKCWJ5dGUgMHgwMDIyIC8vIGluaXRpYWwgaGVhZCBvZmZzZXQKCWZyYW1lX2RpZyAtMyAvLyBvcHRJbjogdHhuCglndHhucyBBc3NldFJlY2VpdmVyCgljYWxsc3ViIHByb2Nlc3Nfc3RhdGljX3R1cGxlX2VsZW1lbnQKCWZyYW1lX2RpZyAtMSAvLyBib3hJRDogdWludDE2CgljYWxsc3ViIHByb2Nlc3Nfc3RhdGljX3R1cGxlX2VsZW1lbnQKCXBvcCAvLyBwb3AgaGVhZCBvZmZzZXQKCWNvbmNhdCAvLyBjb25jYXQgaGVhZCBhbmQgdGFpbAoJZnJhbWVfYnVyeSAtNSAvLyBhbGxvd2xpc3Q6IEFsbG93bGlzdAoKCS8vIC4vY29udHJhY3RzL2FsbG93bGlzdC5hbGdvLnRzOjEyNwoJLy8gYWxsb3dsaXN0QWRkciA9IHRoaXMuYWxsb3dsaXN0LmdldChhbGxvd2xpc3QpW2luZGV4XQoJZnJhbWVfZGlnIC01IC8vIGFsbG93bGlzdDogQWxsb3dsaXN0Cglib3hfZ2V0Cglhc3NlcnQKCWZyYW1lX2RpZyAtMiAvLyBpbmRleDogdWludDY0CglpbnQgMzIgLy8gZWxlbWVudCBsZW5ndGgKCSogLy8gZWxlbWVudCBvZmZzZXQKCWludCAyCgkrIC8vIGFkZCB0d28gZm9yIGxlbmd0aAoJaW50IDMyCglleHRyYWN0MwoJZnJhbWVfYnVyeSAtNiAvLyBhbGxvd2xpc3RBZGRyOiBhZGRyZXNzCgoJLy8gLi9jb250cmFjdHMvYWxsb3dsaXN0LmFsZ28udHM6MTI4CgkvLyBhc3NlcnQoYWxsb3dsaXN0QWRkciA9PT0gdGhpcy50eG4uc2VuZGVyKQoJZnJhbWVfZGlnIC02IC8vIGFsbG93bGlzdEFkZHI6IGFkZHJlc3MKCXR4biBTZW5kZXIKCT09Cglhc3NlcnQKCXJldHN1YgoKYWJpX3JvdXRlX3NldEFsbG93bGlzdFN0YXR1czoKCXR4biBPbkNvbXBsZXRpb24KCWludCBOb09wCgk9PQoJdHhuIEFwcGxpY2F0aW9uSUQKCWludCAwCgkhPQoJJiYKCWFzc2VydAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJY2FsbHN1YiBzZXRBbGxvd2xpc3RTdGF0dXMKCWludCAxCglyZXR1cm4KCnNldEFsbG93bGlzdFN0YXR1czoKCXByb3RvIDEgMAoKCS8vIC4vY29udHJhY3RzL2FsbG93bGlzdC5hbGdvLnRzOjEzOQoJLy8gYXNzZXJ0KHN0YXR1cyA8PSBBTExPV19OT05FKQoJZnJhbWVfZGlnIC0xIC8vIHN0YXR1czogdWludDgKCWludCAyCglpdG9iCglleHRyYWN0IDcgMAoJYjw9Cglhc3NlcnQKCgkvLyAuL2NvbnRyYWN0cy9hbGxvd2xpc3QuYWxnby50czoxNDAKCS8vIHRoaXMuc3RhdHVzLnB1dCh0aGlzLnR4bi5zZW5kZXIsIHN0YXR1cykKCWJ5dGUgInN0YXR1cyIKCXR4biBTZW5kZXIKCWNvbmNhdAoJZnJhbWVfZGlnIC0xIC8vIHN0YXR1czogdWludDgKCWJveF9wdXQKCXJldHN1YgoKbWFpbjoKCXR4biBOdW1BcHBBcmdzCglibnogcm91dGVfYWJpCgoJLy8gZGVmYXVsdCBjcmVhdGVBcHBsaWNhdGlvbgoJdHhuIEFwcGxpY2F0aW9uSUQKCWludCAwCgk9PQoJdHhuIE9uQ29tcGxldGlvbgoJaW50IE5vT3AKCT09CgkmJgoJcmV0dXJuCgpyb3V0ZV9hYmk6CgltZXRob2QgImFkZFRvQWxsb3dsaXN0KHVpbnQxNixhZGRyZXNzLHBheSl2b2lkIgoJbWV0aG9kICJzZXRBbGxvd2xpc3QodWludDE2LGFkZHJlc3NbXSl2b2lkIgoJbWV0aG9kICJkZWxldGVBbGxvd2xpc3QodWludDE2KXZvaWQiCgltZXRob2QgImRlbGV0ZUZyb21BbGxvd2xpc3QodWludDE2LGFkZHJlc3MsdWludDY0KXZvaWQiCgltZXRob2QgInZlcmlmeVNlbmRlcih1aW50MTYsdWludDY0KXZvaWQiCgltZXRob2QgInNldEFsbG93bGlzdFN0YXR1cyh1aW50OCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggYWJpX3JvdXRlX2FkZFRvQWxsb3dsaXN0IGFiaV9yb3V0ZV9zZXRBbGxvd2xpc3QgYWJpX3JvdXRlX2RlbGV0ZUFsbG93bGlzdCBhYmlfcm91dGVfZGVsZXRlRnJvbUFsbG93bGlzdCBhYmlfcm91dGVfdmVyaWZ5U2VuZGVyIGFiaV9yb3V0ZV9zZXRBbGxvd2xpc3RTdGF0dXM=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50IDEKcmV0dXJu"
  },
  "contract": {
    "name": "AllowlistApp",
    "desc": "",
    "methods": [
      {
        "name": "addToAllowlist",
        "args": [
          {
            "name": "boxID",
            "type": "uint16",
            "desc": ""
          },
          {
            "name": "addr",
            "type": "address",
            "desc": ""
          },
          {
            "name": "payment",
            "type": "pay",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "setAllowlist",
        "args": [
          {
            "name": "boxID",
            "type": "uint16",
            "desc": ""
          },
          {
            "name": "addrs",
            "type": "address[]",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "deleteAllowlist",
        "args": [
          {
            "name": "boxID",
            "type": "uint16",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "deleteFromAllowlist",
        "args": [
          {
            "name": "boxID",
            "type": "uint16",
            "desc": ""
          },
          {
            "name": "addr",
            "type": "address",
            "desc": ""
          },
          {
            "name": "index",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "verifySender",
        "args": [
          {
            "name": "boxID",
            "type": "uint16",
            "desc": ""
          },
          {
            "name": "index",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "setAllowlistStatus",
        "args": [
          {
            "name": "status",
            "type": "uint8",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      }
    ]
  }
}