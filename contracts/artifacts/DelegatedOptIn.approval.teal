#pragma version 8
	b main

getSenderReceiverHash:
	proto 2 1

	// ./contracts/delegated_optin_app.algo.ts:37
	// return sha256(concat(sender, receiverOrSigner));
	frame_dig -1 // sender: address
	frame_dig -2 // receiverOrSigner: address
	concat
	sha256
	retsub

bare_route_create:
	txn OnCompletion
	int NoOp
	==
	txn ApplicationID
	int 0
	==
	&&
	assert

	// no dupn needed
	callsub create
	int 1
	return

create:
	proto 0 0

	// ./contracts/delegated_optin_app.algo.ts:42
	// this.assetMBR.set(100_000)
	byte "assetMBR"
	int 100_000
	app_global_put
	retsub

abi_route_setSigVerificationAddress:
	txn OnCompletion
	int NoOp
	==
	txn ApplicationID
	int 0
	!=
	&&
	assert

	// no dupn needed
	txna ApplicationArgs 1
	callsub setSigVerificationAddress
	int 1
	return

setSigVerificationAddress:
	proto 1 0

	// ./contracts/delegated_optin_app.algo.ts:54
	// assert(this.txn.sender === this.app.creator)
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	assert
	==
	assert

	// ./contracts/delegated_optin_app.algo.ts:55
	// assert(!this.sigVerificationAddress.exists())
	txna Applications 0
	byte "sigVerificationAddress"
	app_global_get_ex
	swap
	pop
	!
	assert

	// ./contracts/delegated_optin_app.algo.ts:56
	// this.sigVerificationAddress.set(lsig)
	byte "sigVerificationAddress"
	frame_dig -1 // lsig: address
	app_global_put
	retsub

abi_route_updateAssetMBR:
	txn OnCompletion
	int NoOp
	==
	txn ApplicationID
	int 0
	!=
	&&
	assert
	byte 0x; dup
	txna ApplicationArgs 1
	btoi
	txnas Assets
	callsub updateAssetMBR
	int 1
	return

updateAssetMBR:
	proto 3 0

	// ./contracts/delegated_optin_app.algo.ts:66
	// preMbr = this.app.address.minBalance
	txna Applications 0
	app_params_get AppAddress
	assert
	acct_params_get AcctMinBalance
	assert
	frame_bury -2 // preMbr: uint64

	// ./contracts/delegated_optin_app.algo.ts:68
	// sendAssetTransfer({
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// ./contracts/delegated_optin_app.algo.ts:69
	// assetReceiver: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field AssetReceiver

	// ./contracts/delegated_optin_app.algo.ts:70
	// xferAsset: asset
	frame_dig -1 // asset: asset
	itxn_field XferAsset

	// ./contracts/delegated_optin_app.algo.ts:71
	// assetAmount: 0
	int 0
	itxn_field AssetAmount

	// ./contracts/delegated_optin_app.algo.ts:72
	// fee: 0
	int 0
	itxn_field Fee
	itxn_submit

	// ./contracts/delegated_optin_app.algo.ts:75
	// mbrDelta = preMbr - this.app.address.minBalance
	frame_dig -2 // preMbr: uint64
	txna Applications 0
	app_params_get AppAddress
	assert
	acct_params_get AcctMinBalance
	assert
	-
	frame_bury -3 // mbrDelta: uint64

	// ./contracts/delegated_optin_app.algo.ts:77
	// assert(mbrDelta !== this.assetMBR.get())
	frame_dig -3 // mbrDelta: uint64
	byte "assetMBR"
	app_global_get
	!=
	assert

	// ./contracts/delegated_optin_app.algo.ts:78
	// this.assetMBR.set(mbrDelta)
	byte "assetMBR"
	frame_dig -3 // mbrDelta: uint64
	app_global_put

	// ./contracts/delegated_optin_app.algo.ts:80
	// sendAssetTransfer({
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// ./contracts/delegated_optin_app.algo.ts:81
	// assetReceiver: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field AssetReceiver

	// ./contracts/delegated_optin_app.algo.ts:82
	// xferAsset: asset
	frame_dig -1 // asset: asset
	itxn_field XferAsset

	// ./contracts/delegated_optin_app.algo.ts:83
	// assetAmount: 0
	int 0
	itxn_field AssetAmount

	// ./contracts/delegated_optin_app.algo.ts:84
	// fee: 0
	int 0
	itxn_field Fee

	// ./contracts/delegated_optin_app.algo.ts:85
	// assetCloseTo: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field AssetCloseTo
	itxn_submit
	retsub

abi_route_setOpenOptInSignature:
	txn OnCompletion
	int NoOp
	==
	txn ApplicationID
	int 0
	!=
	&&
	assert

	// no dupn needed
	txn GroupIndex
	int 1
	-
	txna ApplicationArgs 2
	txna ApplicationArgs 1
	callsub setOpenOptInSignature
	int 1
	return

setOpenOptInSignature:
	proto 3 0

	// ./contracts/delegated_optin_app.algo.ts:100
	// assert(verifier.sender === this.sigVerificationAddress.get())
	frame_dig -3 // verifier: txn
	gtxns Sender
	byte "sigVerificationAddress"
	app_global_get
	==
	assert

	// ./contracts/delegated_optin_app.algo.ts:102
	// this.openOptInSignatures.set(signer, sig)
	frame_dig -2 // signer: address
	frame_dig -1 // sig: byte[64]
	box_put
	retsub

abi_route_openOptIn:
	txn OnCompletion
	int NoOp
	==
	txn ApplicationID
	int 0
	!=
	&&
	assert

	// no dupn needed
	txn GroupIndex
	int 1
	-
	txn GroupIndex
	int 2
	-
	callsub openOptIn
	int 1
	return

openOptIn:
	proto 2 0

	// ./contracts/delegated_optin_app.algo.ts:114
	// assert(optIn.assetReceiver === mbrPayment.receiver)
	frame_dig -2 // optIn: axfer
	gtxns AssetReceiver
	frame_dig -1 // mbrPayment: pay
	gtxns Receiver
	==
	assert

	// ./contracts/delegated_optin_app.algo.ts:115
	// assert(mbrPayment.amount >= this.assetMBR.get())
	frame_dig -1 // mbrPayment: pay
	gtxns Amount
	byte "assetMBR"
	app_global_get
	>=
	assert

	// if0_condition
	// ./contracts/delegated_optin_app.algo.ts:118
	// this.openOptInEndTimes.exists(optIn.assetReceiver)
	byte "e-"
	frame_dig -2 // optIn: axfer
	gtxns AssetReceiver
	concat
	box_len
	swap
	pop
	bz if0_end

	// if0_consequent
	// ./contracts/delegated_optin_app.algo.ts:119
	// assert(this.openOptInEndTimes.get(optIn.assetReceiver) > globals.latestTimestamp)
	byte "e-"
	frame_dig -2 // optIn: axfer
	gtxns AssetReceiver
	concat
	box_get
	assert
	btoi
	global LatestTimestamp
	>
	assert

if0_end:
	retsub

abi_route_setOpenOptInEndTime:
	txn OnCompletion
	int NoOp
	==
	txn ApplicationID
	int 0
	!=
	&&
	assert

	// no dupn needed
	txna ApplicationArgs 1
	btoi
	callsub setOpenOptInEndTime
	int 1
	return

setOpenOptInEndTime:
	proto 1 0

	// ./contracts/delegated_optin_app.algo.ts:130
	// this.openOptInEndTimes.set(this.txn.sender, timestamp)
	byte "e-"
	txn Sender
	concat
	frame_dig -1 // timestamp: uint64
	itob
	box_put
	retsub

abi_route_setAddressOptInSignature:
	txn OnCompletion
	int NoOp
	==
	txn ApplicationID
	int 0
	!=
	&&
	assert

	// no dupn needed
	txn GroupIndex
	int 1
	-
	txna ApplicationArgs 3
	txna ApplicationArgs 2
	txna ApplicationArgs 1
	callsub setAddressOptInSignature
	int 1
	return

setAddressOptInSignature:
	proto 4 0

	// ./contracts/delegated_optin_app.algo.ts:148
	// assert(verifier.sender === this.sigVerificationAddress.get())
	frame_dig -4 // verifier: txn
	gtxns Sender
	byte "sigVerificationAddress"
	app_global_get
	==
	assert

	// ./contracts/delegated_optin_app.algo.ts:150
	// this.addressOptInSignatures.set(
	frame_dig -2 // signer: address
	frame_dig -3 // allowedAddress: address
	concat
	frame_dig -1 // sig: byte[64]
	box_put
	retsub

abi_route_addressOptIn:
	txn OnCompletion
	int NoOp
	==
	txn ApplicationID
	int 0
	!=
	&&
	assert
	byte 0x
	txn GroupIndex
	int 1
	-
	txn GroupIndex
	int 2
	-
	callsub addressOptIn
	int 1
	return

addressOptIn:
	proto 3 0

	// ./contracts/delegated_optin_app.algo.ts:165
	// assert(optIn.assetReceiver === mbrPayment.receiver)
	frame_dig -2 // optIn: axfer
	gtxns AssetReceiver
	frame_dig -1 // mbrPayment: pay
	gtxns Receiver
	==
	assert

	// ./contracts/delegated_optin_app.algo.ts:166
	// assert(mbrPayment.amount >= this.assetMBR.get())
	frame_dig -1 // mbrPayment: pay
	gtxns Amount
	byte "assetMBR"
	app_global_get
	>=
	assert

	// ./contracts/delegated_optin_app.algo.ts:168
	// hash = this.getSenderReceiverHash(this.txn.sender, optIn.assetReceiver)
	// no dupn needed
	frame_dig -2 // optIn: axfer
	gtxns AssetReceiver
	txn Sender
	callsub getSenderReceiverHash
	frame_bury -3 // hash: byte[32]

	// if1_condition
	// ./contracts/delegated_optin_app.algo.ts:171
	// this.addressOptInEndTimes.exists(hash)
	byte "e-"
	frame_dig -3 // hash: byte[32]
	concat
	box_len
	swap
	pop
	bz if1_end

	// if1_consequent
	// ./contracts/delegated_optin_app.algo.ts:172
	// assert(this.addressOptInEndTimes.get(hash) > globals.latestTimestamp)
	byte "e-"
	frame_dig -3 // hash: byte[32]
	concat
	box_get
	assert
	btoi
	global LatestTimestamp
	>
	assert

if1_end:
	retsub

abi_route_setAddressOptInEndTime:
	txn OnCompletion
	int NoOp
	==
	txn ApplicationID
	int 0
	!=
	&&
	assert
	byte 0x
	txna ApplicationArgs 2
	txna ApplicationArgs 1
	btoi
	callsub setAddressOptInEndTime
	int 1
	return

setAddressOptInEndTime:
	proto 3 0

	// ./contracts/delegated_optin_app.algo.ts:184
	// hash = this.getSenderReceiverHash(allowedAddress, this.txn.sender)
	// no dupn needed
	txn Sender
	frame_dig -2 // allowedAddress: address
	callsub getSenderReceiverHash
	frame_bury -3 // hash: byte[32]

	// ./contracts/delegated_optin_app.algo.ts:186
	// this.addressOptInEndTimes.set(hash, timestamp)
	byte "e-"
	frame_dig -3 // hash: byte[32]
	concat
	frame_dig -1 // timestamp: uint64
	itob
	box_put
	retsub

main:
	txn NumAppArgs
	bnz route_abi
	txn ApplicationID
	int 0
	==
	bnz bare_route_create

route_abi:
	method "setSigVerificationAddress(address)void"
	method "updateAssetMBR(asset)void"
	method "setOpenOptInSignature(byte[64],address,txn)void"
	method "openOptIn(pay,axfer)void"
	method "setOpenOptInEndTime(uint64)void"
	method "setAddressOptInSignature(byte[64],address,address,txn)void"
	method "addressOptIn(pay,axfer)void"
	method "setAddressOptInEndTime(uint64,address)void"
	txna ApplicationArgs 0
	match abi_route_setSigVerificationAddress abi_route_updateAssetMBR abi_route_setOpenOptInSignature abi_route_openOptIn abi_route_setOpenOptInEndTime abi_route_setAddressOptInSignature abi_route_addressOptIn abi_route_setAddressOptInEndTime
	err