#pragma version 9

txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

abi_route_setSignature:
	byte 0x
	txn GroupIndex
	int 1
	-
	txna ApplicationArgs 1
	callsub setSignature
	int 1
	return

setSignature:
	proto 3 0

	// Record MBR before box_put to later determine the MBR delta
	// ./contracts/delegated_optin_app.algo.ts:20
	// preMBR = globals.currentApplicationAddress.minBalance
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	assert
	frame_bury -3 // preMBR: uint64

	// ./contracts/delegated_optin_app.algo.ts:21
	// this.signatures.set(this.txn.sender, sig)
	txn Sender
	frame_dig -1 // sig: byte[64]
	box_put

	// Verify box MBR payment
	// ./contracts/delegated_optin_app.algo.ts:24
	// assert(boxMBRPayment.receiver === globals.currentApplicationAddress)
	frame_dig -2 // boxMBRPayment: pay
	gtxns Receiver
	global CurrentApplicationAddress
	==
	assert

	// ./contracts/delegated_optin_app.algo.ts:25
	// assert(boxMBRPayment.amount >= globals.currentApplicationAddress.minBalance - preMBR)
	frame_dig -2 // boxMBRPayment: pay
	gtxns Amount
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	assert
	frame_dig -3 // preMBR: uint64
	-
	>=
	assert
	retsub

abi_route_delegatedOptIn:
	// no dupn needed
	txn GroupIndex
	int 1
	-
	txn GroupIndex
	int 2
	-
	callsub delegatedOptIn
	int 1
	return

delegatedOptIn:
	proto 2 0

	// Verify that the signature is present
	// ./contracts/delegated_optin_app.algo.ts:37
	// assert(this.signatures.exists(optIn.sender))
	frame_dig -2 // optIn: axfer
	gtxns Sender
	box_len
	swap
	pop
	assert
	retsub

abi_route_revokeSignature:
	byte 0x
	callsub revokeSignature
	int 1
	return

revokeSignature:
	proto 1 0

	// Record MBR before box_del to later determine the MBR delta
	// ./contracts/delegated_optin_app.algo.ts:46
	// preMBR = globals.currentApplicationAddress.minBalance
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	assert
	frame_bury -1 // preMBR: uint64

	// ./contracts/delegated_optin_app.algo.ts:47
	// this.signatures.delete(this.txn.sender)
	txn Sender
	box_del

	// Return the box MBR
	// ./contracts/delegated_optin_app.algo.ts:50
	// sendPayment({
	itxn_begin
	int pay
	itxn_field TypeEnum

	// ./contracts/delegated_optin_app.algo.ts:51
	// fee: 0
	int 0
	itxn_field Fee

	// ./contracts/delegated_optin_app.algo.ts:52
	// amount: preMBR - globals.currentApplicationAddress.minBalance
	frame_dig -1 // preMBR: uint64
	global CurrentApplicationAddress
	acct_params_get AcctMinBalance
	assert
	-
	itxn_field Amount

	// ./contracts/delegated_optin_app.algo.ts:53
	// receiver: this.txn.sender
	txn Sender
	itxn_field Receiver
	itxn_submit
	retsub

abi_route_defaultTEALScriptCreate:
	int 1
	return

create_NoOp:
	txn NumAppArgs
	switch abi_route_defaultTEALScriptCreate
	err

call_NoOp:
	method "setSignature(byte[64],pay)void"
	method "delegatedOptIn(pay,axfer)void"
	method "revokeSignature()void"
	txna ApplicationArgs 0
	match abi_route_setSignature abi_route_delegatedOptIn abi_route_revokeSignature
	err