{
  "hints": {
    "setSigVerificationAddress(address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "updateAssetMBR(asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setOpenOptInSignature(byte[64],address,txn)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "openOptIn(pay,axfer)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setOpenOptInEndTime(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setAddressOptInSignature(byte[64],address,address,txn)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "addressOptIn(pay,axfer)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setAddressOptInEndTime(uint64,address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "CREATE"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "sigVerificationAddress": {
          "type": "bytes",
          "key": "sigVerificationAddress"
        },
        "assetMBR": {
          "type": "uint64",
          "key": "assetMBR"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 1,
      "num_uints": 1
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50IDEKcmV0dXJu"
  },
  "contract": {
    "name": "DelegatedOptIn",
    "desc": "",
    "methods": [
      {
        "name": "setSigVerificationAddress",
        "args": [
          {
            "name": "lsig",
            "type": "address",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "updateAssetMBR",
        "args": [
          {
            "name": "asset",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "setOpenOptInSignature",
        "args": [
          {
            "name": "sig",
            "type": "byte[64]",
            "desc": ""
          },
          {
            "name": "signer",
            "type": "address",
            "desc": ""
          },
          {
            "name": "verifier",
            "type": "txn",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "openOptIn",
        "args": [
          {
            "name": "mbrPayment",
            "type": "pay",
            "desc": ""
          },
          {
            "name": "optIn",
            "type": "axfer",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "setOpenOptInEndTime",
        "args": [
          {
            "name": "timestamp",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "setAddressOptInSignature",
        "args": [
          {
            "name": "sig",
            "type": "byte[64]",
            "desc": ""
          },
          {
            "name": "signer",
            "type": "address",
            "desc": ""
          },
          {
            "name": "allowedAddress",
            "type": "address",
            "desc": ""
          },
          {
            "name": "verifier",
            "type": "txn",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "addressOptIn",
        "args": [
          {
            "name": "mbrPayment",
            "type": "pay",
            "desc": ""
          },
          {
            "name": "optIn",
            "type": "axfer",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "setAddressOptInEndTime",
        "args": [
          {
            "name": "timestamp",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "allowedAddress",
            "type": "address",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      }
    ]
  }
}